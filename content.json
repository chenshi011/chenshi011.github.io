{"meta":{"title":"二两小面三两抄手","subtitle":"WaveWaveWave","description":null,"author":"chenshi","url":"https://chenshi011.github.io"},"pages":[],"posts":[{"title":" Android自定义View实现滑块SeekBar ","slug":"android","date":"2017-05-17T10:57:16.000Z","updated":"2017-05-19T09:44:39.586Z","comments":true,"path":"2017/05/17/android/","link":"","permalink":"https://chenshi011.github.io/2017/05/17/android/","excerpt":"","keywords":[],"text":"话不多说先上效果图： 本篇文章实现上图的效果，主要使用canvas.drawPath()。 首先看到这张图想到的是直接画N个rect，有的实心有的空心不就完事了吗。不过这样的代码肯定是这样的 1for(int i=0;;i++) canvas.drawRect(); 乍看觉得没问题啊，但canvas不断的重复调用drawXX的方式好吗？有没更好的方式，那么我们的Path登场了。 把需要绘制的rect合并到Path中然后交给canvas一次处理就好了。 好了这么一说其实很简单了， 核心计算path的算法如下： for (int i = 0; i &lt; mBlockCount; i++) { float left = getPaddingLeft() + (mBlockWidth + mBlockSpace) * i; float right = left + mBlockWidth; float bottom = top + height; Path outsidePath = new Path(); RectF outsideRect = new RectF(left, top, right, bottom); outsidePath.addRoundRect(outsideRect, mBlockRadius, mBlockRadius, Path.Direction.CW); Path insidePath = new Path(); RectF insidedeRect = new RectF(left + mBlockLineWidth, top + mBlockLineWidth, right - mBlockLineWidth, bottom - mBlockLineWidth); insidePath.addRoundRect(insidedeRect, mBlockRadius, mBlockRadius, Path.Direction.CW); mInsidePaths.add(insidePath); mOutsidePaths.add(outsidePath); } 我们把滑块分为内层的rect一组跟外层的rect一组，算出2组path备用。然后开启我们的draw之旅： Draw 我们有了内外层的path了怎么用呢。直接draw，好像这样绘制出来的是两个重叠的区域吧。莫慌canvas里面本身还提供了canvas.clipPath的方法： for (int i = 0; i &lt; mBlockCount; i++) { if (i &gt;= _curblock) { //_curblock表示当前的滑块值 canvas.clipPath(mInsidePaths.get(i), Op.DIFFERENCE); } canvas.drawPath(mOutsidePaths.get(i), mPaint); } 好了到这里差不多了然后再添加一些自定义属性,因为我们的滑动是分垂直跟水平方向的，这边属性公用了 android:orientation attrs android:orientation point_progress point_max point_small_radius point_block_radius point_progress_height point_progress_full_color point_progress_empty_color point_border_line_color point_border_fill_color point_border_line_width End好了最后觉得应该显示一下滑块的值，那么利用canvas.drawText轻松搞定了。初次尝试写blog，比较粗略，文笔也不好，就那这个简单的例子练练手。上源码：点我下载","categories":[],"tags":[{"name":"android","slug":"android","permalink":"https://chenshi011.github.io/tags/android/"}]},{"title":"git 如何查看某一行代码是谁写的","slug":"git","date":"2017-05-15T06:48:05.000Z","updated":"2017-05-15T06:50:46.038Z","comments":true,"path":"2017/05/15/git/","link":"","permalink":"https://chenshi011.github.io/2017/05/15/git/","excerpt":"","keywords":[],"text":"git blame xx/../yy.java | grep zz","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://chenshi011.github.io/tags/git/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-05-11T08:21:36.696Z","updated":"2017-05-11T08:21:36.696Z","comments":true,"path":"2017/05/11/hello-world/","link":"","permalink":"https://chenshi011.github.io/2017/05/11/hello-world/","excerpt":"","keywords":[],"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}
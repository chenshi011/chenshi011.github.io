<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>二两小面三两抄手</title>
  <subtitle>WaveWaveWave</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chenshi011.github.io/"/>
  <updated>2017-05-19T09:44:39.586Z</updated>
  <id>https://chenshi011.github.io/</id>
  
  <author>
    <name>chenshi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title> Android自定义View实现滑块SeekBar </title>
    <link href="https://chenshi011.github.io/2017/05/17/android/"/>
    <id>https://chenshi011.github.io/2017/05/17/android/</id>
    <published>2017-05-17T10:57:16.000Z</published>
    <updated>2017-05-19T09:44:39.586Z</updated>
    
    <content type="html"><![CDATA[<p>   话不多说先上效果图：<br>   <img src="https://raw.githubusercontent.com/chenshi011/BlockSeekBar/master/screenshot1.png" alt="效果"><br>    本篇文章实现上图的效果，主要使用canvas.drawPath()。</p>
<p>  首先看到这张图想到的是直接画N个rect，有的实心有的空心不就完事了吗。不过这样的代码肯定是这样的<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(int i=0;;i++) canvas.drawRect();</div></pre></td></tr></table></figure></p>
<p>  乍看觉得没问题啊，但canvas不断的重复调用drawXX的方式好吗？有没更好的方式，那么我们的<strong>Path</strong>登场了。<br>  把需要绘制的rect合并到Path中然后交给canvas一次处理就好了。<br>  好了这么一说其实很简单了，</p>
<p>  核心计算path的算法如下：</p>
<pre><code>for (int i = 0; i &lt; mBlockCount; i++) {
      float left = getPaddingLeft() + (mBlockWidth + mBlockSpace) * i;
      float right = left + mBlockWidth;
      float bottom = top + height;
      Path outsidePath = new Path();
      RectF outsideRect = new RectF(left, top, right, bottom);
      outsidePath.addRoundRect(outsideRect, mBlockRadius, mBlockRadius,
              Path.Direction.CW);
      Path insidePath = new Path();
      RectF insidedeRect = new RectF(left + mBlockLineWidth,
              top + mBlockLineWidth, right - mBlockLineWidth,
              bottom - mBlockLineWidth);
      insidePath.addRoundRect(insidedeRect, mBlockRadius,
              mBlockRadius, Path.Direction.CW);
      mInsidePaths.add(insidePath);
      mOutsidePaths.add(outsidePath);
  }
</code></pre><p>  我们把滑块分为内层的rect一组跟外层的rect一组，算出2组path备用。然后开启我们的draw之旅：</p>
<h2 id="Draw"><a href="#Draw" class="headerlink" title="Draw"></a>Draw</h2><hr>
<p> 我们有了内外层的path了怎么用呢。直接draw，好像这样绘制出来的是两个重叠的区域吧。莫慌canvas里面本身还提供了canvas.clipPath的方法：</p>
<pre><code>for (int i = 0; i &lt; mBlockCount; i++) {
     if (i &gt;= _curblock) { //_curblock表示当前的滑块值
         canvas.clipPath(mInsidePaths.get(i), Op.DIFFERENCE);
     }
     canvas.drawPath(mOutsidePaths.get(i), mPaint);
 }
</code></pre><p>好了到这里差不多了然后再添加一些自定义属性,因为我们的滑动是分垂直跟水平方向的，这边属性公用了 android:orientation    </p>
<h1 id="attrs"><a href="#attrs" class="headerlink" title="attrs"></a>attrs</h1><ul>
<li>android:orientation</li>
<li>point_progress</li>
<li>point_max</li>
<li>point_small_radius</li>
<li>point_block_radius</li>
<li>point_progress_height</li>
<li>point_progress_full_color</li>
<li>point_progress_empty_color</li>
<li>point_border_line_color</li>
<li>point_border_fill_color</li>
<li>point_border_line_width</li>
</ul>
<h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>好了最后觉得应该显示一下滑块的值，那么利用canvas.drawText轻松搞定了。<br>初次尝试写blog，比较粗略，文笔也不好，就那这个简单的例子练练手。上源码：<br><a href="https://github.com/chenshi011/BlockSeekBar" target="_blank" rel="external">点我下载</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;   话不多说先上效果图：&lt;br&gt;   &lt;img src=&quot;https://raw.githubusercontent.com/chenshi011/BlockSeekBar/master/screenshot1.png&quot; alt=&quot;效果&quot;&gt;&lt;br&gt;    本篇文章实现上图
    
    </summary>
    
    
      <category term="android" scheme="https://chenshi011.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>git 如何查看某一行代码是谁写的</title>
    <link href="https://chenshi011.github.io/2017/05/15/git/"/>
    <id>https://chenshi011.github.io/2017/05/15/git/</id>
    <published>2017-05-15T06:48:05.000Z</published>
    <updated>2017-05-15T06:50:46.038Z</updated>
    
    <content type="html"><![CDATA[<p>git blame xx/../yy.java | grep zz</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git blame xx/../yy.java | grep zz&lt;/p&gt;

    
    </summary>
    
    
      <category term="git" scheme="https://chenshi011.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://chenshi011.github.io/2017/05/11/hello-world/"/>
    <id>https://chenshi011.github.io/2017/05/11/hello-world/</id>
    <published>2017-05-11T08:21:36.696Z</published>
    <updated>2017-05-11T08:21:36.696Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
